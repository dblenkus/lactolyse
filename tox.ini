[tox]
envlist =
    py36,
    linters,
    packaging
skip_missing_interpreters = True
minversion = 3.5.0
isolated_build = true

# Configure special Tox environment used for isolated building of the source
# package.
[testenv:.package]
# Use the default Python 3 version available on the system.
# NOTE: This makes it portable to CI systems where only one particular Python 3
# version is installed.
basepython = python3

[testenv]
basepython = python3.6
extras = test
passenv =
    # Pass environment variables controlling project's tests.
    py36,migrations: LACTOLYSE_* DOCKER_* DJANGO_TEST_PROCESSES TRAVIS LC_*
ignore_errors =
    !linters: false
    # Run all linters to see their output even if one of them fails.
    linters: true

commands_pre =
    # Verify installed packages have compatible dependencies.
    # NOTE: Running 'pip check' after installation is necessary since pip
    # currently lacks dependency resolution which means it can silently create
    # broken installations.
    # For more details, see: https://github.com/pypa/pip/issues/988.
    pip check

commands =
    # General tests commands:
    # Run tests.
    py36: coverage run tests/manage.py test {env:TEST_SUITE:lactolyse} \
    py36:     --noinput --verbosity=2 --parallel
    py36: coverage combine

    # Linter commands:
    linters: pylint lactolyse
    # Check code formatting (PEP 8).
    linters: pycodestyle lactolyse
    # Check documentation formatting (PEP 257).
    linters: pydocstyle lactolyse --match='(?!test[_s]).*\.py'
    # Check order of imports.
    linters: isort --recursive --check-only --diff lactolyse

    # Packaging commands:
    # Confirm that items checked into git are in sdist.
    packaging: check-manifest
    # Verify package metadata and confirm the long_description will render
    # correctly on PyPI.
    packaging: python setup.py check --metadata --restructuredtext --strict
